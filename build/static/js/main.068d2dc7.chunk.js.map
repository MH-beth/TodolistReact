{"version":3,"sources":["components/Todolist.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","marginTop","spacing","HomeIcon","props","SvgIcon","d","Todolist","classes","React","useState","statue","setStatue","tasks","setTasks","realTasks","toString","split","item","setItem","className","map","task","i","onClick","taskIndex","indexOf","filter","htmlFor","console","log","type","placeholder","onChange","e","target","value","length","concat","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAOMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJC,MAAO,OACP,YAAa,CACXC,UAAWH,EAAMI,QAAQ,SAKjC,SAASC,EAASC,GACd,OACE,cAACC,EAAA,EAAD,2BAAaD,GAAb,aACE,sBAAME,EAAE,2CAKhB,IAqEeC,EAzDE,WACb,IAAMC,EAAUZ,IAChB,EAA6Ba,IAAMC,SAAS,IAA5C,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAyBH,IAAMC,SAAS,IAAxC,mBAAKG,EAAL,KAAaC,EAAb,KAEIC,EADcF,EAAMG,WACIC,MAAM,KAClC,EAAyBR,IAAMC,SAAS,IAAxC,mBAAOQ,EAAP,KAAcC,EAAd,KAcA,OACI,sBAAKC,UAAY,QAAjB,UACI,oBAAIA,UAAY,OAAhB,sBACA,sBAAKA,UAAY,QAAjB,UACI,oBAAIA,UAAY,OAAhB,wBACA,6BACKL,EAAUM,KAAI,SAACC,EAAOC,GACnB,OACI,+BAAaD,EAAb,IAAmB,wBAAQE,QAAW,WAClC,IAAIC,EAAYZ,EAAMa,QAAQJ,GAC9BT,EAAMY,GAAa,oBACnBX,EAASD,EAAMc,QAAO,SAAAL,GAAI,MAAa,sBAATA,OAHf,oBAAVC,WASzB,uBAAK,uBACL,uBAAOK,QAAQ,QAAQR,UAAU,SAAjC,2BACA,uBAAK,uBACL,qBAAKA,UAAY,SAAjB,SACI,sBAAKA,UAAU,YAAf,UACA,mBAAGA,UAAU,SAASI,QAAW,WAAOK,QAAQC,IAAI,YAApD,SAAiE,cAAC3B,EAAD,MACjE,uBAAO4B,KAAO,OACdC,YAAc,YACdC,SAAY,SAACC,GAAD,OAAOf,EAAQe,EAAEC,OAAOC,eAIxC,uBACA,wBAAQZ,QA3CA,WACTN,EAAKmB,OAAS,GAEbvB,EAASD,EAAMyB,OAAOpB,IAEtBC,EAAQ,KAEQX,EAAQT,MAoCxB,sBACA,mBAAGqB,UAAY,SACfI,QAAW,kBAAKZ,EAAU,KAD1B,SACgCD,QC5E7B4B,EARH,WACV,OACE,qBAAKnB,UAAY,OAAjB,SACE,cAAC,EAAD,OCKSoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.068d2dc7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport \"./assets/Todolist.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n\r\nfunction HomeIcon(props) {\r\n    return (\r\n      <SvgIcon {...props}>\r\n        <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n      </SvgIcon>\r\n    );\r\n  }\r\n\r\nconst SimpleAlert = ({severity , text}) => {\r\n    const classes = useStyles();\r\n    return(\r\n        <div className = {classes.root}>\r\n            <Alert severity={severity}>\r\n            <AlertTitle>Oops an Error have occured</AlertTitle>\r\n                {text}\r\n            </Alert>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Todolist = () => {\r\n    const classes = useStyles();\r\n    const [statue , setStatue] = React.useState(\"\");\r\n    let [tasks , setTasks] = React.useState([]);\r\n    let stringTasks = tasks.toString();\r\n    let realTasks = stringTasks.split(\",\")\r\n    const [item , setItem] = React.useState(\"\");\r\n    const addTask = () => {\r\n        if(item.length > 0)\r\n        {\r\n            setTasks(tasks.concat(item));\r\n            <SimpleAlert severity=\"success\" text = \"SuccessFully added\"/>\r\n            setItem(\"\");\r\n        }else{\r\n            <div className={classes.root}>\r\n                <SimpleAlert severity=\"error\" text=\"You Can't add and empty element\"/>\r\n            </div>\r\n            \r\n        }\r\n    };\r\n    return(\r\n        <div className = \"mains\">\r\n            <h1 className = \"name\">Todolist</h1>\r\n            <div className = \"tasks\">\r\n                <h2 className = \"task\">Your Tasks</h2>\r\n                <ul>\r\n                    {realTasks.map((task , i) => {\r\n                        return(\r\n                            <li key={i}>{task} <button onClick = {() => {\r\n                                let taskIndex = tasks.indexOf(task);\r\n                                tasks[taskIndex] = \"This Task Is Done\";\r\n                                setTasks(tasks.filter(task => task !== \"This Task Is Done\"));\r\n                            }}>Done</button></li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>\r\n            <br/><br/>\r\n            <label htmlFor=\"title\" className=\"labels\">Add Your Task</label>\r\n            <br/><br/>\r\n            <div className = \"inputs\">\r\n                <div className=\"realInput\">\r\n                <a className=\"unique\" onClick = {() => {console.log(\"clicked\")}}><HomeIcon/></a>\r\n                <input type = \"text\" \r\n                placeholder = \"Your Task\"\r\n                onChange = {(e) => setItem(e.target.value)}>\r\n                </input>\r\n                </div>\r\n            </div>\r\n            <br/>\r\n            <button onClick={addTask}>Add Task</button>\r\n            <p className = \"statue\"\r\n            onClick = {()=> setStatue(\"\")}>{statue}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Todolist;","import React from \"react\";\nimport \"./App.css\";\nimport Todolist from \"./components/Todolist\";\n\nconst App = () => {\n  return(\n    <div className = \"main\">\n      <Todolist/>\n    </div>\n  );\n};\n\nexport default App; ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}